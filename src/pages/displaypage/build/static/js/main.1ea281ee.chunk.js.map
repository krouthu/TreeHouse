{"version":3,"sources":["fire.js","App.js","serviceWorker.js","index.js"],"names":["defaultApp","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","console","log","name","App","props","handleChange","evt","handleSubmit","e","preventDefault","state","landlordRef","fire","database","ref","refs","value","age","landlord","aboutMe","price","gender","housemates","bed","bath","wantGarage","noGarage","hasPets","noPets","route10","route15","route16","route19","route20","route22","beach","downtown","campus","push","landlords","this","Fragment","onSubmit","className","type","id","placeholder","key","style","width","marginRight","min","rows","cols","onChange","checked","onClick","Component","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.1ea281ee.chunk.js","sourcesContent":["\n\n\nimport firebase from 'firebase'\n// import \"firebase/firestore\";\n// import { AppComponent } from './app.component';\t\n// import './app';\n\n  // Your web app's Firebase configuration\n  const firebaseConfig = {\n    apiKey: \"AIzaSyAlNDWfc58lB-U5DvxEPJGz1NSiMMNNK9g\",\n    authDomain: \"landlordprofile.firebaseapp.com\",\n    databaseURL: \"https://landlordprofile.firebaseio.com\",\n    projectId: \"landlordprofile\",\n    storageBucket: \"landlordprofile.appspot.com\",\n    messagingSenderId: \"394466582338\",\n    appId: \"1:394466582338:web:5b8f1fe8eeaf3f039772db\",\n    measurementId: \"G-VNV4W04DYQ\"\n  };\n  // Initialize Firebase\n\n  // firebase.initializeApp(firebaseConfig);\n  // firebase.analytics();\n\nvar defaultApp = firebase.initializeApp(firebaseConfig);\nconsole.log(defaultApp.name);\n//console.log(firebase.app().name);\n\nexport default defaultApp;\n","//import { AppComponent } from './app.component';\n\nimport './App.css';\n\nimport React, { Component } from 'react';\n\n//import fire from 'firebase';\n\nimport fire from './fire';\n\n \n\nclass App extends Component {\n \n\n     constructor(props){\n\n          super(props);\n\n          this.state = {\n\n               name: '',\n\n               age: '',\n\n               aboutMe: '',\n\n               price: '',\n\n               gender: '',\n\n               housemates: '',\n\n               bed: '',\n\n               bath: '',\n\n               wantGarage: false,\n\n               noGarage: false,\n\n               hasPets: false,\n\n               noPets: false,\n\n               route10: false,\n\n               route15: false,\n\n               route16: false,\n\n               route19: false,\n\n               route20: false,\n\n               route22: false,\n\n               beach: false,\n\n               downtown: false,\n\n               campus: false\n\n          };\n\n     }\n\n \n\n     handleChange = (evt) => {\n\n          // const value = evt.target.type === \"checkbox\" ? evt.target.checked : evt.target.value;\n\n          // this.setState({\n\n          // ...this.state,\n\n          // [evt.target.name]: value\n\n          // });\n\n     }\n\n \n\n     handleSubmit = (e) => {\n\n          e.preventDefault();\n\n\t\t  console.log(this.state.name);\n\t\t  \n          console.log(this.state);\n\n          const landlordRef = fire.database().ref('landlord');\n\n          this.state.name=this.refs.name.value\n\n          this.state.age=this.refs.age.value\n\n          const landlord = {\n\n               name: this.state.name,\n\n               age: this.state.age,\n\n               aboutMe: this.state.aboutMe,\n\n               price: this.state.price,\n\n               gender: this.state.gender, \n\n               housemates: this.state.housemates,\n\n               bed: this.state.bed,\n\n               bath: this.state.bath,\n\n \n\n               wantGarage: this.state.wantGarage,\n\n               noGarage: this.state.noGarage,\n\n               hasPets: this.state.hasPets,\n\n               noPets: this.state.noPets,\n\n               route10: this.state.route10,\n\n               route15: this.state.route15,\n\n               route16: this.state.route16,\n\n               route19: this.state.route19,\n\n               route20: this.state.route20,\n\n               route22: this.state.route22,\n\n               beach: this.state.beach,\n\n               downtown: this.state.downtown,\n\n               campus: this.state.campus\n\n          }\n\n          landlordRef.push(landlord);\n\n          // this.setState({\n\n          // // name: '',\n\n         \n\n          // // age: '',\n\n          // aboutMe: '',\n\n          // price: '',\n\n          // gender: '',\n\n         \n\n          // housemates: '',\n\n \n\n          // bed: '',\n\n              \n\n          // bath: '',\n\n    \n\n          // wantGarage: false,\n\n          // noGarage: false,\n\n          // hasPets: false,\n\n          // noPets: false,\n\n          // route10: false,\n\n          // route15: false,\n\n          // route16: false,\n\n          // route19: false,\n\n          // route20: false,\n\n          // route22: false,\n\n          // beach: false,\n\n          // downtown: false,\n\n          // campus: false\n\n          // });\n\n \n\n \n\n     }\n\n \n\n \n\n     render() {\n\n\t\t  const landlords = this.state;\n\t\t  //\n\n     return (\n\n          <React.Fragment>\n\n          <form onSubmit={this.handleSubmit}>\n\n          <div className=\"App\">\n\n               <header className=\"Profile\">\n\n                    <h1>Your Profile</h1>\n\n               </header>\n\n               <header className=\"Names\">\n\n                    <label>Name:&nbsp;</label>\n\n                    <input type = \"text\"\n\n                         id = \"name\"\n\n                         name = \"name\"\n\n                         ref=\"name\"\n\n                         // onChange = {this.handleChange}\n\n                         //value={this.state.firstName}\n\n                         placeholder = \"Name\" />\n\n                                  </header>\n\n               <br/>\n\n               <br/>\n\n               <div className=\"row\">\n\n            <div className=\"col-xl-12\">\n\n            <div\n\n                  key={123}\n\n                  className=\"card float-left\"\n\n                  style={{ width: \"18rem\", marginRight: \"1rem\" }}\n\n                >\n\n                <div className=\"card-body\">\n\n                    <h5 className=\"card-title\">{landlords.name}</h5>\n\n                    <p className=\"card-text\">{landlords.age}</p>\n\n                   \n\n                  </div>\n\n                </div>\n\n             </div>\n\n             </div>\n\n               <header className=\"AGE\">\n\n                    <label>Age:</label>\n\n                    <br/>\n\n                    <input type=\"text\"\n\n                         id = \"age\"\n\n                         name = \"age\"\n\n                         min = \"14\"\n\n                         ref=\"age\"\n\n                         // value = {this.state.age}\n\n                         // onChange = {this.handleChange}\n\n                         />\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"AboutMe\">\n\n                    <label>About Me:</label>\n\n                    <br/>\n\n                    <textarea\n\n                         id = \"aboutMe\"\n\n                         name = \"aboutMe\"\n\n                         placeholder = \"Tell the renters a little bit about yourself here\"\n\n                         rows = \"5\"\n\n                         cols = \"50\"\n\n                         value = {this.state.aboutMe}\n\n                         onChange = {this.handleChange}/>\n\n                    {/*</textarea>*/}\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <h3 className=\"Preferences\">Please indicate your housing preferences in this section:</h3>\n\n               <br/>\n\n               <header className=\"PriceRange\">\n\n                    <label>Price:&nbsp;$</label>\n\n                    <input\n\n                         type = \"text\"\n\n                         name = \"price\"\n\n                         id = \"price\"\n\n                         onChange = {this.handleChange}\n\n                         value = {this.state.price}\n\n                         placeholder = \"price\"/>\n\n              \n\n              \n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"gender\">\n\n                    <label>Gender:&nbsp;$</label>\n\n                    <input\n\n                         type = \"text\"\n\n                         name = \"gender\"\n\n                         id = \"gender\"\n\n                         onChange = {this.handleChange}\n\n                         value = {this.state.gender}\n\n                         placeholder = \"gender\"/>\n\n              \n\n              \n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Housemates\">\n\n                    <label>Number of Housemates:&nbsp;</label>\n\n                    <input\n\n                         type = \"text\"\n\n                         id = \"housemates\"\n\n                         name = \"housemates\"\n\n                         onChange = {this.handleChange}\n\n                         value = {this.state.housemates}\n\n                         placeholder = \"number of Housemates\"/>\n\n              \n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Rooms\">\n\n                    <label>Number of Bedrooms:&nbsp;</label>\n\n                    <input\n\n                         type = \"text\"\n\n                         id = \"bed\"\n\n                         name = \"bed\"\n\n                         onChange = {this.handleChange}\n\n                         value = {this.state.bed}\n\n                         placeholder = \"number of Bedrooms\"/>\n\n              \n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Bathrooms\">\n\n                    <label>Number of Bathrooms:&nbsp;</label>\n\n                    <input\n\n                         type = \"text\"\n\n                         id = \"bath\"\n\n                         name = \"bath\"\n\n                         onChange = {this.handleChange}\n\n                         value = {this.state.bath}\n\n                         placeholder = \"number of Bathrooms\"/>\n\n         \n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Garage\">\n\n                    <label>Garage?&nbsp;&nbsp;</label>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"wantGarage\"\n\n                         name = \"wantGarage\"\n\n                         checked = {this.state.wantGarage}\n\n                         onChange = {this.handleChange}/>\n\n                    <label>Yes&nbsp;&nbsp;</label>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"noGarage\"\n\n                         name = \"noGarage\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.noGarage}/>\n\n                    <label>No</label>\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Pets\">\n\n                    <label>Will you have any pets?&nbsp;&nbsp;</label>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"hasPets\"\n\n                         name = \"hasPets\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.hasPets}/>\n\n                    <label>Yes&nbsp;&nbsp;</label>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"noPets\"\n\n                         name = \"noPets\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.noPets}/>\n\n                    <label>No</label>\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Bus\">\n\n                    <label>Preferred Bus Routes:</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route10\"\n\n                         name = \"route10\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route10}/>\n\n                    <label>Route 10</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route15\"\n\n                         name = \"route15\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route15}/>\n\n                    <label>Route 15</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route16\"\n\n                         name = \"route16\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route16}/>\n\n                    <label>Route 16</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route19\"\n\n                         name = \"route19\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route19}/>\n\n                    <label>Route 19</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route20\"\n\n                         name = \"route20\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route20}/>\n\n                    <label>Route 20</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"route22\"\n\n                         name = \"route22\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.route22}/>\n\n                    <label>Route 22</label>\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <header className=\"Location\">\n\n                    <label>Location:</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"beach\"\n\n                         name = \"beach\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.beach}/>\n\n                    <label>Near the Beach</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"downtown\"\n\n                         name = \"downtown\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.downtown}/>\n\n                    <label>Near Downtown</label>\n\n                    <br/>\n\n                    <input\n\n                         type = \"checkbox\"\n\n                         id = \"campus\"\n\n                         name = \"campus\"\n\n                         onChange = {this.handleChange}\n\n                         checked = {this.state.campus}/>\n\n                    <label>Near Campus</label>\n\n               </header>\n\n               <br/>\n\n               <br/>\n\n               <button type=\"submit\" onClick={this.handleSubmit}>Submit</button>\n\n               <br/>\n\n               <br/>\n\n               <br/>\n\n               <br/>\n\n          </div>\n\n          </form>\n\n          </React.Fragment>\n\n     );\n\n}\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}